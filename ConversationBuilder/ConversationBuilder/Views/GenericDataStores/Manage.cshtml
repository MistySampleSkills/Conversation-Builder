@model ConversationBuilder.ViewModels.GenericDataViewModel

@{
	ViewData["Title"] = "Manage";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Styles {
	<link rel="stylesheet" href="~/css/themes/@ViewBag.CssFile" />	
}


<h3>Managing data for generic data store @Model.Name</h3>
<hr />
<h3 style="color:red">@ViewBag.Message</h3>

<div class="row">
	<div class="col-md-4">
		<form asp-action="AddData">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<div class="form-group">
				<label asp-for="Key" class="control-label"></label>
				<input asp-for="Key" class="form-control" />
				<span asp-validation-for="Key" class="text-danger"></span>
			</div>
			
			<div class="form-group">
				<label asp-for="Value" class="control-label"></label>
				<input asp-for="Value" class="form-control" />
				<span asp-validation-for="Value" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Image" class="control-label"></label>
				<input asp-for="Image" class="form-control" />
				<span asp-validation-for="Image" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="ScreenText" class="control-label"></label>
				<input asp-for="ScreenText" class="form-control" />
				<span asp-validation-for="ScreenText" class="text-danger"></span>
			</div>
			<div class="form-group">
				<input asp-for="Id" class="form-control" value="@Model.Id" type="hidden"> </input>
			</div>
			<div class="form-group">
				<input type="submit" value="Add" class="btn btn-default" />
			</div>
		</form>
	</div>
</div>

<h3>Current data maps</h3>

@if(Model.Data != null)
{
	<table class="table">
	<thead>
		<tr>
			<th>
				Key
			</th>
			<th>
				Value
			</th>
			<th>
				Image
			</th>
			<th>
				Screen Text
			</th>
		
			<th></th>
			<th></th>
		</tr>
	</thead>
	<tbody>	
@foreach (var item in Model.Data) {
		<tr>
			<td>
				@Html.DisplayFor(modelItem => item.Value.Key)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Value.Value)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Value.Image)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Value.ScreenText)
			</td>
			<td>
				@Html.ActionLink("Edit", "EditData",  "GenericDataStores", new { dataStoreId = Model.Id, dataId = item.Value.Id }) |
				@Html.ActionLink("Delete", "RemoveData",  "GenericDataStores", new { dataStoreId = Model.Id, dataId = item.Value.Id })
			</td>
		</tr>
	}
	</tbody>
</table>
}

<div>
	@Html.ActionLink("Back to Data Stores", "Index",  "GenericDataStores", new { id = Model.Id})
</div>
