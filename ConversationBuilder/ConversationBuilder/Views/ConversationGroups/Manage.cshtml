@model ConversationBuilder.ViewModels.ConversationGroupConversationViewModel

@{
	ViewData["Title"] = "Manage";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Styles {
	<link rel="stylesheet" href="~/css/@ViewBag.CssFile" />	
}


<h3>Managing conversation for group @Model.ConversationGroupName</h3>
<hr />
<h3 style="color:red">@ViewBag.Message</h3>

<hr />
@if(Model.Conversations != null && Model.Conversations.Count() == @ViewBag.Conversations.Count)
{
	<h5>All the existing triggers have been added to this interaction.</h5>
}
else
{
	<div class="row">
		<div class="col-md-4">
			<form asp-action="AddConversation">
				<div asp-validation-summary="ModelOnly" class="text-danger"></div>

				<div class="form-group">
					Add conversation
					<select asp-for="Handler" class="form-control">
						@foreach (KeyValuePair<string, string> item in @ViewBag.Conversations)
						{
							if(Model.Conversations == null || !Model.Conversations.Any(x => x.Id == item.Key))
							{
								<option value="@item.Key">@item.Value</option>
							}
						}
					</select>
				</div>
				
				<div class="form-group">
					<input asp-for="ConversationGroupName" class="form-control" value="@Model.ConversationGroupName" type="hidden"> </input>
				</div>
				<div class="form-group">
					<input asp-for="ConversationGroupId" class="form-control" value="@Model.ConversationGroupId" type="hidden"> </input>
				</div>
				<div class="form-group">
					<input type="submit" value="Add" class="btn btn-default" />
				</div>
			</form>
		</div>
	</div>
}


@if(Model.Conversations != null && Model.Conversations.Count() > 0)
{
	<div class="row">
		<div class="col-md-4">
			<form asp-action="RemoveConversation">
				<div asp-validation-summary="ModelOnly" class="text-danger"></div>

				<div class="form-group">
					Remove conversation
					<select asp-for="Handler" class="form-control">
						@foreach (ConversationBuilder.DataModels.Conversation item in Model.Conversations)
						{
							<option value="@item.Id">@item.Name</option>
						}
					</select>
				</div>
				
				<div class="form-group">
					<input asp-for="ConversationGroupName" class="form-control" value="@Model.ConversationGroupName" type="hidden"> </input>
				</div>
				<div class="form-group">
					<input asp-for="ConversationGroupId" class="form-control" value="@Model.ConversationGroupId" type="hidden"> </input>
				</div>
	
				<div class="form-group">
					<input type="submit" value="Remove" class="btn btn-default" />
				</div>
			</form>
		</div>
	</div>
}

<h3>Current conversations</h3>

@if(Model.Conversations != null)
{
		
	<table class="table">
		<thead>
			<tr>
				<th>
					Name
				</th>
				<th>
					Description
				</th>
			</tr>
		</thead>
		<tbody>
	@foreach (var item in Model.Conversations) {
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.Name)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Description)
				</td>				
			</tr>
	}
		</tbody>
	</table>

}

<div>	
	@Html.ActionLink("Back to Conversation Group", "Details",  "ConversationGroups", new { id = Model.ConversationGroupId})		
</div>

@if((@ViewBag.DeparturePoints != null && @ViewBag.DeparturePoints.Count > 0) ||
	(@ViewBag.EntryPoints != null && @ViewBag.EntryPoints.Count > 0))
{
	<hr />
	<h3>Map Conversation Entry and Departure Points</h3>
	<div class="row" style="width:200%">
		<div class="col-md-4">
			<form asp-action="MapConversationInteractions">
				<div asp-validation-summary="ModelOnly" class="text-danger"></div>

				<div class="form-group">
					Departure Point
					<select asp-for="DeparturePoint" class="form-control">
						@foreach (KeyValuePair<string, ConversationBuilder.DataModels.TriggerActionOption> item in @ViewBag.DeparturePoints)
						{
							<option value="@item.Key">@item.Value.DisplayName</option>
						}
					</select>
				</div>

				<div class="form-group">
					Entry Point
					<select asp-for="EntryPoint" class="form-control">
						@foreach (KeyValuePair<string, ConversationBuilder.ViewModels.InteractionViewModel> item in @ViewBag.EntryPoints)
						{
							<option value="@item.Key">@item.Value.ConversationName:@item.Value.Name</option>
						}
					</select>
				</div>
				
				<div class="form-group">
					<input asp-for="ConversationGroupName" class="form-control" value="@Model.ConversationGroupName" type="hidden"> </input>
				</div>
				<div class="form-group">
					<input asp-for="ConversationGroupId" class="form-control" value="@Model.ConversationGroupId" type="hidden"> </input>
				</div>
				<div class="form-group">
					<input type="submit" value="Map" class="btn btn-default" />
				</div>
			</form>
		</div>
	</div>


	@if(ViewBag.ConversationMappings != null && ViewBag.ConversationMappings.Count > 0)
	{	
		<table class="table">
			<thead>
				<tr>
					<th>
						Departure Point
					</th>
					<th>
						Entry Point
					</th>
					<th></th>
				</tr>
			</thead>
			<tbody>	
					
			@foreach(KeyValuePair<string, ConversationBuilder.DataModels.ConversationMappingDetail> item in ViewBag.ConversationMappings)
			{
				<tr>
					<td>
						@Html.DisplayFor(modelItem => item.Value.DeparturePointName)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Value.EntryPointName)
					</td>		
					<div class="form-group">
						<input asp-for="DeparturePoint" class="form-control" value="@item.Value.DeparturePoint" type="hidden"> </input>
						<input asp-for="EntryPoint" class="form-control" value="@item.Value.EntryPoint" type="hidden"> </input>
					<td>
						@Html.ActionLink("Delete", "DeleteConversationInteractionMap", new { id=item.Key, conversationGroupId=Model.ConversationGroupId})
					</td>								
				</tr>
			}
		</tbody>
		</table>
	}
}