@model ConversationBuilder.DataModels.CharacterConfiguration

@{
	ViewData["Title"] = "Delete";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Styles {
	<link rel="stylesheet" href="~/css/themes/@ViewBag.CssFile" />	
}


@{
	var msg = "";
	if(ViewBag.CanBeDeleted)
	{
		msg = "Please confirm deletion of configuraion " + Model.Name + "?";
	}
	else
	{
		
		msg = "Configuration " + Model.Name + " is in use and cannot be deleted.";
	}
}

<h3>@msg</h3>

<hr />
<h3 style="color:red">@ViewBag.Message</h3>

@if(@ViewBag.CanBeDeleted)
{
	<div>
		<dl class="dl-horizontal">
			<dt>
				@Html.DisplayNameFor(model => model.Id)
			</dt>
			<dd>
				@Html.DisplayFor(model => model.Id)
			</dd>
			<dt>
				@Html.DisplayNameFor(model => model.Name)
			</dt>
			<dd>
				@Html.DisplayFor(model => model.Name)
			
			<dt>
				@Html.DisplayNameFor(model => model.Character)
			</dt>
			<dd>
				@Html.DisplayFor(model => model.Character)
			</dd>
			<dt>
				@Html.DisplayNameFor(model => model.LogLevel)
			</dt>
			<dd>
				@Html.DisplayFor(model => model.LogLevel)
			</dd>

			<dt>
				@Html.DisplayNameFor(model => model.FacePitchOffset)
			</dt>
			<dd>
				@Html.DisplayFor(model => model.FacePitchOffset)
			</dd>

			<dt>
				@Html.DisplayNameFor(model => model.SpeechConfiguration)
			</dt>
			<dd>
				@ViewBag.SpeechConfigurationName
			</dd>

			<dt>
				@Html.DisplayNameFor(model => model.LogInteraction)
			</dt>
			<dd>
				@Html.DisplayFor(model => model.LogInteraction)
			</dd>

			<dt>
				@Html.DisplayNameFor(model => model.StreamInteraction)
			</dt>
			<dd>
				@Html.DisplayFor(model => model.StreamInteraction)
			</dd>
				
			<dt>
				@Html.DisplayNameFor(model => model.StartVolume)
			</dt>
			<dd>
				@Html.DisplayFor(model => model.StartVolume)
			</dd>
				
			<dt>
				@Html.DisplayNameFor(model => model.Payload)
			</dt>
			<dd>
				@Html.DisplayFor(model => model.Payload)
			</dd>
			<dt>
				@Html.DisplayNameFor(model => model.HeardSpeechToScreen)
			</dt>
			<dd>
				@Html.DisplayFor(model => model.HeardSpeechToScreen)
			</dd>
			
			<dt>
				@Html.DisplayNameFor(model => model.DisplaySpoken)
			</dt>
			<dd>
				@Html.DisplayFor(model => model.DisplaySpoken)
			</dd>
			<dt>
				@Html.DisplayNameFor(model => model.Skill)
			</dt>
			<dd>
				@Html.DisplayFor(model => model.Skill)
			</dd>
			<dt>
				@Html.DisplayNameFor(model => model.ManagementAccess)
			</dt>
			<dd>
				@Html.DisplayFor(model => model.ManagementAccess)
			</dd>
			<dt>
				@Html.DisplayNameFor(model => model.LargePrint)
			</dt>
			<dd>
				@Html.DisplayFor(model => model.LargePrint)
			</dd>	
			<dt>
				@Html.DisplayNameFor(model => model.ShowListeningIndicator)
			</dt>
			<dd>
				@Html.DisplayFor(model => model.ShowListeningIndicator)
			</dd>
			<dt>
				@Html.DisplayNameFor(model => model.Updated)
			</dt>
			<dd>
				@Html.DisplayFor(model => model.Updated)
			</dd>
			<dt>
				@Html.DisplayNameFor(model => model.Created)
			</dt>
			<dd>
				@Html.DisplayFor(model => model.Created)
			</dd>
		</dl>

		<form asp-action="Delete">
			<input type="submit" value="Delete" class="btn btn-default" /> |
		</form>
	</div>

}
@Html.ActionLink("Back to List", "Index",  "CharacterConfigurations")